#!/bin/bash
if [[ "$BASHRC_LOADED" != "yes" ]]; then
  # Record this directory for later reference
  export BASHRC_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

  # Bash colors
  if [ -f $BASHRC_DIR/colors ]; then
    . $BASHRC_DIR/colors
  fi

  # Bash aliases
  if [ -f $BASHRC_DIR/aliases ]; then
    . $BASHRC_DIR/aliases
  fi
  # Default variables
  HOST_ALIAS='\H'
  if [[ "$USER" == "" ]]; then
    USER="${USERNAME}"
  fi

  function assert-path {
    if [ -d "$1" ]; then
      if ! echo ":${PATH}:" | grep -q ":${1}:"; then PATH="$PATH:$1" ; fi
    fi
    export PATH
  }
  

  assert-path "${HOME}/bin"
  assert-path "/bin"
  assert-path "/usr/bin"
  assert-path "/usr/local/bin"

  assert-path "/sbin"
  assert-path "/usr/sbin"
  assert-path "/usr/local/sbin"
  assert-path "/opt/python2.7/bin"

  assert-path "$BASHRC_DIR/bin"

  # EC2 Environment
  una=`uname -a`
  if echo "$una" | grep "amzn" > /dev/null; then
    if [ -f $BASHRC_DIR/amzn ]; then
      . $BASHRC_DIR/amzn
    fi
  fi

  # Host specific variables
  if [ -f $BASHRC_DIR/hostvars ]; then
    . $BASHRC_DIR/hostvars
  fi

  if [ -n "$BASH_VERSION" ]; then
    PS1="\[${CUSER}\]\u@\[${CYELLOW}\]${HOST_ALIAS}:\[${CGREEN}\]\w\[${CDEFAULT}\] \n\$ "
  elif [ -n "$ZSH_VERSION" ]; then
    precmd() { eval "$PROMPT_COMMAND"; }
    PS1="${CUSER}%n@${CYELLOW}${HOST_ALIAS}:${CGREEN}%~${CDEFAULT}"$'\n$ '
    # PS1="%{$fg[red]%}%n%{$reset_color%}@%{$fg[blue]%}%m %{$fg[yellow]%}%~ %{$reset_color%}%% "
  fi
  function assert_in_prompt_command {
    if ! echo "$PROMPT_COMMAND" | grep -q -F "$1"; then
      PROMPT_COMMAND="$1;$PROMPT_COMMAND"
    fi
  }
  assert_in_prompt_command 'echo -ne "${CCYAN}[$(date-8601-local)] ${CYELLOW}$(git-branch-name) ${CDEFAULT}"'
  assert_in_prompt_command 'add_to_backlist'

  # Bash history improvements
  if [ -f $BASHRC_DIR/history ]; then
    . $BASHRC_DIR/history
  fi
  # set PATH so it includes user's private bin if it exists
  if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
  fi

  . $BASHRC_DIR/secrecy.sh

  # You can extend your bashrc with an entry in your local ~/profile.d
  if [ -d "$HOME/profile.d" ] ; then
    # Apply additional profile scripts if they exist
    for sourcefile in $HOME/profile.d/*.sh; do
      # If the file is readable
      if [ -r "$sourcefile" ]; then
        if which gdate &> /dev/null; then
          UNIX_START_TIME=`gdate +%s.%N`
        else
          UNIX_START_TIME=`date +%s.%N`
        fi
        . "$sourcefile"
        if which gdate &> /dev/null; then
          UNIX_END_TIME=`gdate +%s.%N`
        else
          UNIX_END_TIME=`date +%s.%N`
        fi
        SLOW_TO_SOURCE=`echo $UNIX_END_TIME $UNIX_START_TIME | awk '{print ((($1-$2)) > 0.2)}'`
        TOTAL_TIME_IN_MS=`echo $UNIX_END_TIME $UNIX_START_TIME | awk '{ printf("%0.2f",$1-$2) }'`
        if [ -z "$SUPPRESS_SLOW_SOURCE_WARNING" ]; then
          if [[ "$SLOW_TO_SOURCE" == "1" ]]; then
            msg-error "It took ${TOTAL_TIME_IN_MS}s to load $sourcefile"
          fi
        fi
      fi
    done
  fi
  BASHRC_LOADED="yes"
fi
