#!/bin/bash
# User specific aliases and functions
# Bash aliases
alias ll='ls -lah --color'
alias ll-sort-size='ll -S'
alias l='ls --color'
alias w='cd /var/www/html'
alias wr='cd ~/Work/realtalk'
alias x='vim /etc/asterisk/extensions.conf'
alias s='vim /etc/asterisk/sip.conf'
function md { mkdir $1; cd $1; }
alias ..='cd ..'
alias cd..='cd ..'

function echo-err { echo "$@" 1>&2; }
function date-8601 { date -u +%Y-%m-%dT%H:%M:%S%z; }
function log-8601 { echo "[ $(date-8601) ] $@"; }
function log-err-8601 { echo-err "[ $(date-8601) ] $@"; }

# Log aliases
alias tail-httpd="tail -n20 /var/log/httpd/error_log"

# MySQL aliases
alias mq="mysql -uroot -p'$RDSPASS'"
alias mqd="mysqldump -uroot -p'$RDSPASS'"
alias mq-rds="mysql -uroot -p'$RDSPASS' -h'$RDSHOST'"
alias mqd-rds="mysqldump -uroot -p'$RDSPASS' -h'$RDSHOST'"

# Django aliases
function dm-path {
cwd="$(pwd)"
while [ ! -f manage.py ]; do
if [ "$(pwd)" == "/" ]; then
echo Hit the root.
break;
fi
cd ..
done
if [ -f manage.py ]; then
echo $(pwd)/manage.py
else
cd "$cwd"
fi
}
alias dm='$(dm-path)'
alias dm-runserver='dm runserver 0.0.0.0:80'
alias dm-startapp='dm startapp'
alias dm-migrate='dm migrate'


# Git aliases
alias gits='git status'
alias gita='git add -A'
alias gitan='git add -An'
alias gitc='git commit -m'
alias gitch='git checkout'
alias gitchb='git checkout -b'
alias gitpush='git push origin master'
alias gitpull='git pull origin master'
alias gitgraph='git log --graph --oneline --decorate --date=relative --all --color'
function gitacp { git add -A; git commit -m "$1"; git push origin master; }
function gitcp { git commit -m "$1" ; git push origin master; }
function bashrc-update { cd $BASHRC_DIR; gitpull; . main; }

# Mercurial aliases
function hg-clone { hg clone ssh://hg@spliceserver2:/$1; }
alias hgs='hg st | grep -vE "^\?"'
alias hga='hg add'
alias hgan='hg add -n'
alias hgar='hg addremove'
alias hgc='hg commit -m'
alias hgch='hg update -c'
alias hgchb='hg branch'
alias hgpush='hg push'
alias hgpull='hg pull -u'

# Package Manager aliases
alias ag='sudo apt-get -y install'
alias ags='sudo apt-get -s install'
alias agu='sudo apt-get upgrade'
alias agli='apt --installed list'
alias aglg='apt list | grep'
alias yumi='sudo yum -y install'
alias yumlg='yum list | grep'
alias yumli='yum list installed | grep'
alias yumu='sudo yum -y update'
alias pipi='pip install'
alias pipu='pip install --upgrade'
alias piplg='pip search'

# Service aliases
function sr { service $1 restart; }
alias srh='sr httpd'
alias sra='sr apache2'
alias srm='sr mysqld'
alias srn='sr neo4j-service'
alias srs='sr smb'
alias sall='service --status-all'

alias sc='systemctl'
function scr { systemctl restart $1; }
alias scrh='scr httpd'
alias scra='scr apache2'
alias scrm='scr mysqld'
alias scrn='scr neo4j-service'
alias scrs='scr smb'

function scs { systemctl status $1; }
alias scsh='scs httpd'
alias scsa='scs apache2'
alias scsm='scs mysqld'
alias scsn='scs neo4j-service'
alias scss='scs smb'
alias scall='systemctl'

# Ansible aliases
alias play='ansible-playbook'

# Work directory
alias work='cd $WORK_HOME'

# Common functions 
alias rsync-sudo='rsync -e "ssh" --progress --rsync-path="sudo rsync"'
alias rsync-limited='rsync --progress --bwlimit=1000'
alias rsync-sudo-limited='rsync-sudo --bwlimit=1000'
function rsync-ext {                           rsync -amv --progress --include="$1" --include='*/' --exclude='*' $2 $3; }
function rsync-sudo-ext {                 rsync-sudo -amv --progress --include="$1" --include='*/' --exclude='*' $2 $3; }
function limited-rsync-ext {           rsync-limited -amv --progress --include="$1" --include='*/' --exclude='*' $2 $3; }
function limited-rsync-sudo-ext { rsync-sudo-limited -amv --progress --include="$1" --include='*/' --exclude='*' $2 $3; }

function clean-comments { cat "$1" | grep -Ev "^\s*;"; }
alias sync-time='ntpdate pool.ntp.org'
function fix-time { ntpdate time.nist.gov; chkconfig ntpd on; service ntpd start; }
alias encrypt-file='gpg --cipher-algo AES256 --symmetric $1'
alias decrypt-file='gpg'
alias regex='$BASHRC_DIR/regex.py'
function regex-lineswap { sed -i '/'"$1"'/c\'"$2" "$3"; }
function allow-ssh-root-login { regex-lineswap '^PermitRootLogin' 'PermitRootLogin without-password' /etc/ssh/sshd_config; service sshd restart; }
alias edit-bashrc='cd $BASHRC_DIR; vim'

function ask { echo -ne "${CYELLOW} $1: ${CDEFAULT}"; read ASK; export ASK; }
function ask-default { echo -ne "${CYELLOW} $1 [$2]: ${CDEFAULT}"; read ASK; export ASK=${ASK:-$2}; }
function ask-yes { echo -ne "${CYELLOW} $1 [Y/n]: ${CDEFAULT}"; read ASK; export ASK=${ASK:-y}; }
function ask-no { echo -ne "${CYELLOW} $1 [y/N]: ${CDEFAULT}"; read ASK; export ASK=${ASK:-n}; }
function msg-error { echo -e "${CRED}${1}${CDEFAULT}"; }
function msg-info { echo -e "${CCYAN}${1}${CDEFAULT}"; }
function msg-success { echo -e "${CGREEN}${1}${CDEFAULT}"; }

function setup-ssh-login { 
	if [ ! -d ~/.ssh ]; then 
		mkdir ~/.ssh; 
	fi
	chmod 700 ~/.ssh
	cd ~/.ssh
	if [ ! -f ~/.ssh/mlkey.pub ]; then
		cp $BASHRC_DIR/ssh/mlkey.pub ./
	fi
	cat mlkey.pub >> authorized_keys
	chmod 600 *
	cd ~
	if [ -f /usr/sbin/restorecon ]; then 
		restorecon -FRvv ~/.ssh
	fi
}
function setup-ssh-creds {
	if [ ! -d ~/.ssh ]; then
		setup-ssh-login
	fi
	cd ~/.ssh
	cp $BASHRC_DIR/ssh/mlkey.pem.gpg ./
	decrypt-file mlkey.pem.gpg
	ask-yes "Set mlkey as id_rsa?"
	if [ "$ASK" != "n" ]; then
		cp mlkey.pem id_rsa
	fi
	ask-yes "Set gmail as github key?"
	if [ "$ASK" != "n" ]; then
		cp $BASHRC_DIR/ssh/gmail.pem.gpg ./
		decrypt-file gmail.pem.gpg
		if grep -L "github.com" config > /dev/null; then
			echo "config already contains github entry, skipping"
		else
			cat $BASHRC_DIR/ssh/config-git >> ~/.ssh/config
		fi
		cd $BASHRC_DIR
		git remote set-url origin git@github.com:maludwig/bashrc.git
		git config --global user.name "Mitchell Ludwig"
		git config --global user.email mitchell.ludwig@gmail.com
		cd ~/.ssh
	fi
	rm *.gpg
	chmod 700 .
	chmod 600 *
}
function date-today { echo $(date +%F); }
function date-second { echo $(date +%F_%H-%M-%S); }
function generate-ssh-key {
	ask-default 'What username will this key be for?' "$1"
	ssh-keygen -t rsa -b 4096 -C "$ASK - $(date +%F)";
}
function set-host-alias { ask-default "Enter a host alias for this machine" "$HOST_ALIAS"; echo 'export HOST_ALIAS="'${ASK}'"' > $BASHRC_DIR/hostvars; . $BASHRC_DIR/hostvars; }

# Login aliases
alias suw='sudo su apache'

